version: "3.91"
services:
  fast_api:
    build:
      context: ./
      dockerfile: ./app/Dockerfile      
    image: local_image/fast_api       
    environment:
      - TZ=${timezone}
      - app_logs=/app/logs   
      - log_level=${log_level}   
      - redis_url=${redis_url}   
      - redis_topics=${redis_topics}  
      - pg_url=postgresql://${db_user}:${db_pswd}@${db_host}/${db_name}     
      - app_name=${app_name}    
      - redis_task_status=${redis_task_status}                  
    volumes: 
      - app_code_source:/app/app
      - logs-store:/app/logs 
      - common_libs:/app/app/backend/common_libs
    command: >
        bash -c "python -m uvicorn backend.main:app --host 0.0.0.0 --port 81"         
    ports:
      - "${app_ports}"

  worker:
    build:
      context: ./worker/ 
      dockerfile: Dockerfile    
    image: local_image/worker 
    environment: 
      - redis_url=${redis_url} 
      - redis_topics=${redis_topics}        
      - TZ=${timezone}       
      - app_name=${app_name}          
      - redis_task_status=${redis_task_status}     
    volumes: 
      - worker_code_source:/worker
      - common_libs:/worker/backend/common_libs   
    command: python worker.py        
    depends_on:
      - redis

  redis:
    hostname: redis    
    image: redis:8.0-rc1-alpine3.21 #redis:7.0.8-bullseye  
    ports:
      - ${redis_port}  
    volumes:
      - type: bind
        source: ${redis_data_folder}
        target: /data   

  jupyter:
      build:
        context: ./jupyter/ 
        dockerfile: Dockerfile
        network: host      
        args:
          NB_USER: "${user}"
      user: root
      image: local_image/jupyter     
      working_dir: /home/${user}/work
      ports:
        - "${juputer_ports}" 
      volumes: 
      - type: bind
        source: ${notebook_folder}
        target: /home/${user}/work
      privileged: true   
        
      environment: 
        - CHOWN_HOME=yes
        - CHOWN_HOME_OPTS=-R    
        - restartable=yes 
        - TZ=${timezone} 
        - DOCKER_STACKS_JUPYTER_CMD=notebook
        - NB_USER=${user}
      #stdin_open: true
      #tty: true
      command: "start-notebook.sh --NotebookApp.token='' --NotebookApp.password=''" 


  postgres:
    container_name: postgres_container
    image: postgres:17.4-alpine3.21

    environment:
      POSTGRES_DB: ${db_name}
      POSTGRES_USER: ${db_user}
      POSTGRES_PASSWORD: ${db_pswd}
      PGDATA: "/var/lib/postgresql/data/pgdata"
    volumes:
      - ./postgresql.conf:/etc/postgresql.conf
      - type: bind
        source: ${db_data}
        target: /var/lib/postgresql/data/pgdata
    command: 'postgres -c config_file="/etc/postgresql.conf"'  
    ports:
      - "${db_ports}"  


  pgadmin:
    container_name: pgadmin_container
    image: dpage/pgadmin4:9.2
    environment:
      PGADMIN_DEFAULT_EMAIL: ${pgadmin_email} 
      PGADMIN_DEFAULT_PASSWORD: ${pgadmin_pswd} 
      PGADMIN_CONFIG_SERVER_MODE: ${pgadmin_server_mode} 
    volumes:
      #- ./postgresql.conf:/etc/postgresql.conf
      - type: bind
        source: ${pgadmin_data}
        target: /var/lib/pgadmin

    ports:
      - "${pgadmin_ports}"
    restart: unless-stopped
    deploy:
      resources:
        limits:
          cpus: '0.5'
          memory: 1G



volumes:

  app_code_source: 
    driver: local
    driver_opts:
      o: bind
      type: none
      device: ${app_code_source} 
  logs-store: 
    driver: local
    driver_opts:
      o: bind
      type: none
      device: ${logs_dir} 

  common_libs: 
    driver: local
    driver_opts:
      o: bind
      type: none
      device: ${common_libs} 

  worker_code_source: 
    driver: local
    driver_opts:
      o: bind
      type: none
      device: ${worker_code_source} 

      

